name: Test, build, push and deploy
on: push
env:
  IMAGE_TAG: ${{ github.sha }}
  IMAGE: docker.pkg.github.com/${{ github.repository }}/pto-admin
  PRINT_PAYLOAD: true
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/migrate_to_spring-cloud-gateway'
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Set up cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Run maven tests
        run: mvn -f ./api/pom.xml -B verify

  test-build-and-push:
    name: Test, build and push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/migrate_to_spring-cloud-gateway'
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Set up cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build maven artifacts
        run: mvn -f ./api/pom.xml -B package

      - name: Install dependencies
        run: npm ci --prefix web-app

      - name: Build frontend assets
        run: npm run build --prefix web-app

      - name: Build and push Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} --password-stdin
          docker build -t ${IMAGE}:${IMAGE_TAG} .
          docker push ${IMAGE}:${IMAGE_TAG}

  deploy-dev:
    name: Deploy application to dev
    if: github.ref == 'refs/heads/migrate_to_spring-cloud-gateway'
    needs: test-build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Deploy application
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais-dev.yaml
          VAR: version=${{ env.IMAGE_TAG }}
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release/dev@${{ env.IMAGE_TAG }}
          release_name: Release to dev
          prerelease: true

  deploy-prod:
    name: Deploy application to prod
    if: github.ref == 'refs/heads/main'
    needs: test-build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Deploy application
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: nais-prod.yaml
          VAR: version=${{ env.IMAGE_TAG }}
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release/prod@${{ env.IMAGE_TAG }}
          release_name: Release to prod
          prerelease: false
